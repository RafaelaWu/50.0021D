module mojo_top (
//pressing buttons will make the LED lights light up
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output high2,
    output high1,
    output low1,
    output low2,
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,       // AVR RX buffer full
    input button,
    input button2
  ) {
  
  sig rst;                  // reset signal

  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
//make the low always 0 then ground the high
    //turning off LEDs doesnt reall work. 
    high1 = ~button2; //142
    low1= button2; //22
    high2 = ~button;  //140
    low2 = button;  //24
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
  }
}